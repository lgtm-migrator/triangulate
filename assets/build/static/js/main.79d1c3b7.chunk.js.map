{"version":3,"sources":["components/Title.js","App.js","reportWebVitals.js","index.js"],"names":["Title","React","createElement","App","state","queue","image","timer","identifier","toggleButtonState","axios","get","then","result","console","log","setState","data","poll","catch","error","this","setInterval","link","clearInterval","queueHolder","Image","src","fluid","className","Button","onClick","variant","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAMeA,MAJf,WACI,OAAOC,IAAMC,cAAc,MAAO,KAAMD,IAAMC,cAAc,KAAM,KAAM,8C,+BC+D7DC,E,4MA1DXC,MAAQ,CACJC,MAAO,KACPC,MAAO,GACPC,MAAO,KACPC,WAAY,I,EAqBhBC,kBAAoB,WAChBC,IAAMC,IAAI,oBAAoBC,MAAK,SAAAC,GAC/BC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVX,MAAOQ,EAAOI,KAAKZ,MACnBG,WAAYK,EAAOI,KAAKT,aAE5B,EAAKU,UACNC,OAAM,SAAAC,GACLN,QAAQC,IAAIK,O,0CA3BpB,WAAQ,IAAD,OACHC,KAAKjB,MAAMG,MAAQe,aAAY,WAC3BZ,IAAMC,IAAI,oBAAsB,EAAKP,MAAMI,YAAYI,MAAK,SAAAC,GACxDC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVX,MAAOQ,EAAOI,KAAKZ,MACnBC,MAAOO,EAAOI,KAAKM,OAEE,KAArB,EAAKnB,MAAME,OACXkB,cAAc,EAAKpB,MAAMG,UAE9BY,OAAM,SAAAC,GACLN,QAAQC,IAAIK,GACZI,cAAc,EAAKpB,MAAMG,YAE9B,O,oBAgBP,WACI,IAAIkB,EAMJ,MALyB,KAArBJ,KAAKjB,MAAME,MACXmB,EAAc,cAACC,EAAA,EAAD,CAAOC,IAAKN,KAAKjB,MAAME,MAAOsB,OAAK,IAC1CP,KAAKjB,MAAMC,MAAQ,IAC1BoB,EAAc,sDAAyBJ,KAAKjB,MAAMC,MAApC,qBAEV,sBAAKwB,UAAU,MAAf,UACA,cAAC,EAAD,IACCJ,EACD,cAACK,EAAA,EAAD,CAAQC,QAASV,KAAKZ,kBAAmBuB,QAAQ,UAAjD,gCAAuF,S,kCAKnG,WACIX,KAAKd,MAAQ,S,GAvDHN,IAAMgC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79d1c3b7.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Title() {\n    return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Triangulate.xyz - Randomly Generated Art\"));\n}\n\nexport default Title","import './App.css';\nimport React from \"react\";\nimport Image from 'react-bootstrap/Image'\nimport Title from \"./components/Title\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\"\n\nclass App extends React.Component {\n    state = {\n        queue: null,\n        image: \"\",\n        timer: null,\n        identifier: \"\"\n    };\n\n    poll() {\n        this.state.timer = setInterval(()=> {\n            axios.get('/api/v1/generate/' + this.state.identifier).then(result => {\n                console.log(result)\n                this.setState({\n                    queue: result.data.queue,\n                    image: result.data.link\n                });\n                if (this.state.image !== \"\") {\n                    clearInterval(this.state.timer)\n                }\n            }).catch(error => {\n                console.log(error)\n                clearInterval(this.state.timer)\n            });\n        }, 1000);\n    }\n\n    toggleButtonState = () => {\n        axios.get('/api/v1/generate').then(result => {\n            console.log(result)\n            this.setState({\n                queue: result.data.queue,\n                identifier: result.data.identifier,\n            });\n            this.poll()\n        }).catch(error => {\n            console.log(error)\n        });\n    };\n\n    render() {\n        let queueHolder\n        if (this.state.image !== \"\") {\n            queueHolder = <Image src={this.state.image} fluid/>\n        } else if (this.state.queue > 0) {\n            queueHolder = <div>Rendering, you are {this.state.queue} in the queue.</div>\n        }\n        return (<div className=\"App\">\n                <Title/>\n                {queueHolder}\n                <Button onClick={this.toggleButtonState} variant=\"primary\">Generate some art!</Button>{' '}\n            </div>\n        );\n    }\n\n    componentWillUnmount() {\n        this.timer = null;\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}